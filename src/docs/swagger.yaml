swagger: "2.0"
info:
  # description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  description: "Api rest usando o express + mongo + socket"
  version: "1.0.0"
  title: "Documentação da API"
  # termsOfService: "http://swagger.io/terms/"
  # contact:
  #   email: "apiteam@swagger.io"
  # license:
  #   name: "Apache 2.0"
  #   url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:3000

tags:
- name: "crud_teste"
  description: "Crud usando o expressJs"

basePath: /

schemes:
  - http
  - https

consumes:
  - application/json

produces:
  - application/json

paths:
  /users:
    x-swagger-router-controller: crudModel
    get:
      tags:
        - "crud_teste"
      description: Retorna a lista de usuários
      operationId: findAll
      responses:
        "200":
          description: Sucesso
          schema:
            $ref: "#definitions/FindAll"
        default:
          description: Erro
          schema:
            $ref: "#definitions/ErrorResponse"
    post:
      tags:
        - "crud_teste"
      description: Cria um novo usuário
      operationId: create
      parameters:
      - name: body
        in: body
        description: "Dados do usário: nome, email, cpf"
        schema:
          $ref: "#definitions/User" 
        required: true
      responses:
        "200":
          description: Sucesso
          schema:
            $ref: "#definitions/UserCreate"
        default:
          description: Erro
          schema:
            $ref: "#definitions/ErrorResponse"
  /users/{id}:
    delete:
      tags:
        - "crud_teste"
      description: Remove um usuário
      operationId: delete
      parameters:
      - name: id
        in: path
        description: "Id do usário"
        type: string
        required: true
      responses:
        "200":
          description: Sucesso
          schema:
            $ref: "#definitions/UserDelete"
        default:
          description: Erro
          schema:
            $ref: "#definitions/ErrorResponse"
    put:
      tags:
        - "crud_teste"
      description: Atualizar um usuário
      operationId: update
      # consumes:
      # - "application/x-www-form-urlencoded"
      parameters:
      - name: id
        in: path
        description: "Id do usário"
        type: string
        required: true
      - name: body
        in: body
        description: "Dados do usário: nome, email, cpf"
        schema:
          $ref: "#definitions/User" 
        required: false
      responses:
        "200":
          description: Sucesso
          schema:
            $ref: "#definitions/UserDelete"
        default:
          description: Erro
          schema:
            $ref: "#definitions/ErrorResponse"

definitions:
  FindAll:
    required:
      - result
    properties:
      result:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            nome:
              type: string
            email:
              type: string
            cpf:
              type: number
            __v:
              type: number
  UserCreate:
    type: object    
    required:
      - _id
      - nome
      - email
      - cpf
      - __v
    properties:
      _id:
        type: string
      nome:
        type: string
      email:
        type: string
      cpf:
        type: number
      __v:
        type: number            
  UserDelete:
    type: object    
    required:
      - _id
      - nome
      - email
      - cpf
      - __v
    properties:
      _id:
        type: string
      nome:
        type: string
      email:
        type: string
      cpf:
        type: number
      __v:
        type: number            
  User:
    type: object    
    required:
      - nome
      - email
      - cpf
    properties:
      nome:
        type: string
      email:
        type: string
      cpf:
        type: number          
  ErrorResponse:
    required:
      - e
    properties:
      message:
        type: string
